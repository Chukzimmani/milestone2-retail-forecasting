import pandas as pd
import numpy as np
from xgboost import XGBRegressor
from sklearn.model_selection import train_test_split
import joblib

# Load data
df = pd.read_csv("retail_store_inventory.csv")
df.dropna(inplace=True)
df['Discount'] = df['Discount'] / 100.0
df['Price_After_Discount'] = df['Price'] * (1 - df['Discount'])
df['Is_Promo'] = ((df['Holiday/Promotion'] == 1) | (df['Discount'] > 0)).astype(int)

df = pd.get_dummies(df, columns=['Category', 'Region', 'Seasonality', 'Weather Condition'], drop_first=True)

features = ['Price', 'Discount', 'Competitor Pricing', 'Holiday/Promotion', 'Inventory Level',
            'Price_After_Discount', 'Is_Promo'] + \
           [col for col in df.columns if 'Category_' in col or 'Region_' in col or 
            'Seasonality_' in col or 'Weather Condition_' in col]

X = df[features]
y = df['Units Sold']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train and save model
model = XGBRegressor(objective='reg:squarederror', n_estimators=200, max_depth=5, learning_rate=0.05)
model.fit(X_train, y_train)
joblib.dump(model, "xgb_model.pkl")
